hiroyuki_iijima

followup評価
いろいろなビルトインメソッドを使うなど、学習したことがうかがわれる。
テスト関数を呼びだすコードをコメント化してしまっており、TDDの理解不足。
関数がいつ実行されるのかを理解できていない。
リファクタリングの余地あり。

・コードスタイル整っている
・テスト結果をコメントアウトしてしまっている
・変数へ代入しているのが関数なのか実行結果なのかを理解できていない
・返す値の意味は理解できているが、リファクタリングの余地あり


followup assessmentお疲れさまでした！😊

すべての問題で、どのような値を返すべきか？ しっかりと理解されています。
また、変数名を含むコードスタイルが整っていて、読みやすいコードになっています👏

しかし、せっかく書いてくださったテスト関数を呼び出すコードがコメントアウトされています😥
たぶん問題に記述されていた関数を呼び出すコードを尊重されたのかと思いますが、
TDDの手法とし考えた場合に、いかがでしょうか？
テスト関数を呼びだすコードの方を生かしておいていただきたかったです。

1問目は、Number.isInteger()メソッドを使用して整数であるか否かの判断を行なったんですね！
それに対するテストも記述されているのは非常に良いです！👏
ただし isEvenという boolean値を === true のような形で条件分岐されています。
boolean値ってどのような値でしたっけ？
この値と配列のビルトインメソッドを使えば、さらに簡潔に返すようリファクタリングすることができそうです💪

他の問題に関しても、
Objectクラスのメソッドを使用したらどうか？
配列やオブジェクトを用意しておいてはどうか？
などと、リファクタリングすることができないか考えてみることもお勧めします💪

5問目は、fooや barに代入されているのは、関数でしょうか？関数が返す値でしょうか？🤔
関数はいつ実行されるでしょうか？
それを踏まえるとまた説明が変わってくると思います。

6問目の changeColorは、16進数の値をカラーコードに変換されたんですか！😮
なかなか思いつきませんね！
ボタンの補色化も素晴らしいです！👏

基礎コースで取り上げていない Numberや Arrayクラスのメソッドを使用するなど、
フォローアップ期間も自習をされてスキルアップされたことが伺えます💪
今後も学習を続けられて、hiroyukiさんのスキルレベルが更に向上することを期待しています！😊


masaharu_takeda

followup評価
いろいろなビルトインメソッドを使うなど、学習したことがうかがわれる。
関数がいつ実行されるのかを理解できていない。
いくつかの問題でテストが足りていない。
リファクタリングの余地あり。

・コードスタイル整っている
・Object、Arrayクラスのビルトインメソッド使用
・変数へ代入しているのが関数なのか実行結果なのかを理解できていない
・いくつかの問題でテストが足りていない
・返す値の意味は理解できているが、リファクタリングの余地あり


followup assessmentお疲れさまでした！

テストは全問パスしています！🎉
おめでとうございます！😊

コードスタイルも概ね見やすくなっていますが、仮引数間や else前後などにスペースがあればさらに良いですね。
その他、若干気になるところを以下に記します。

1問目：
boolという boolean値を === true のような形で条件分岐されています。
boolean値ってどのような値でしたっけ？🤔
この値と配列のビルトインメソッドを使えば、さらに簡潔に返すようリファクタリングすることができそうです💪

2問目：
Objectクラスの keysメソッドで、キー名の配列を取得するようにされたんですね！😮
素晴らしいですね！👏
こうすることにより配列のビルトインメソッドを使うことができますね！
関数内を 1行とするリファクタリングに挑戦してみてください！💪

4問目：
変数 sumの役割は何だったでしょうか？🤔

5問目：
fooや barに代入されているのは、関数でしょうか？関数が返す値でしょうか？🤔
関数はいつ実行されるでしょうか？
それを踏まえるとまた説明が変わってくると思います。

8問目：
引数は「奇数個の単語からなる文字列(スペースで区切られる)」とあります。
test(changeMiddle("red green blue white gray", "yellow"), "red green yellow white gray");

9問目：
以下のテストも実行してみてください。
test(countSomething(["a", "b", "c", 1, 0, 1, false, 1]),"NUMBER COUNT: 4");
TDDのテストは非常に重要ですね。

テストはパスしており、実装の方法はさまざまなやり方があると思うのですが、
上記を参考にされてリファクタリングを行なってみてください

基礎コースで取り上げていない Objectや Arrayクラスのメソッドを使用するなど、
フォローアップ期間も自習をされてスキルアップされたことが伺えます💪
今後も学習を続けられて、masaharuさんのスキルレベルが更に向上することを期待しています！😊





